import{M as s,N as a}from"./app-e38e0622.js";const r=s("coords",()=>{const t=async()=>new Promise((i,o)=>{navigator.geolocation.getCurrentPosition(e=>{i(e),o("Error")})});return console.log(t),{coords:t}});s("position",()=>{let t;return{location:t,fetchPosition:async()=>{await r().coords();try{fetch("https://api.openweathermap.org/data/2.5/onecall?lat=50.61&lon=5.68&exclude=minutely&units=metric&appid=b68afb69c2607c15cb4f6bf022f17e25").then(e=>e.json()).then(e=>{t=e})}catch{}}}});s({id:"myStore",state:()=>({counter:0}),getters:{doubleCounter:t=>t.counter*2},actions:{increment(){this.counter++}}});const c=s("location",{state:()=>({position:null,latitude:null,longitude:null}),actions:{async fetchPosition(){try{const t=await new Promise((i,o)=>{navigator.geolocation.getCurrentPosition(e=>{this.position=e,this.latitude=e.coords.latitude,this.longitude=e.coords.longitude,i(e)},e=>{o(e)})});return this.getPosition(),t}catch(t){throw console.error("Error fetching position:",t),t}},getPosition(){return this.position?Promise.resolve(this.position):this.fetchPosition()}}}),l=s({id:"activities",state:()=>({activities:[],activitiesSortByDistance:[],activitiesValues:[],latitude:null,longitude:null,sort:Array,sortByDate:Array,locationFetched:!1,locationCache:null}),getters:{getActivitiesSortedByDistance(){if(this.activitiesValues=Object.values(this.activitiesSortByDistance),!Array.isArray(this.activitiesValues))return[];this.sort=this.activitiesValues.slice().sort((t,i)=>t.distance-i.distance),console.log(this.sort)},getActivitiesSortedByDate(){return this.activitiesValues=Object.values(this.activities),Array.isArray(this.activitiesValues)?(this.sortByDate=[...this.activitiesValues],this.sortByDate.sort((t,i)=>Date.parse(i.date)-Date.parse(t.date)),console.log(this.sortByDate),this.sortByDate):[]}},actions:{async fetchLocation(){if(this.locationFetched&&this.locationCache)return this.locationCache;const i=await c().fetchPosition();this.latitude=i.coords.latitude,this.longitude=i.coords.longitude,this.fetchActivities(this.latitude,this.longitude),this.locationFetched=!0,this.locationCache={latitude:this.latitude,longitude:this.longitude}},setFetchActivities(t,i){},async fetchActivities(t,i){const o=await a.post("/api/sort-activities",{latitude:t,longitude:i});this.activitiesSortByDistance=o.data.activitiesSortByDistance,this.activities=o.data.activities,this.getActivitiesSortedByDistance,this.getActivitiesSortedByDate}}});export{l as u};
